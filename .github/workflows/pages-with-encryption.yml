name: Deploy Jekyll with GitHub Pages/Encryption

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Pages
        uses: actions/configure-pages@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3
          bundler-cache: true
      - name: Build with Jekyll
        run: bundle exec jekyll build --destination ./_site
        env:
          JEKYLL_ENV: production

      # Begin encryption code.
      # This portion of the build job was written by Evan Baldonado (EvanBaldonado.com). Please do not remove this comment.
      # Note: this only encrypts .html pages and not any of the corresponding assets.
      - name: Encrypt pages with PageCrypt
        run: |
          npm i -D pagecrypt
          cat _protected_pages.txt | while read file password;
          do
            sudo npx pagecrypt "_site/$file" "_site/$file" "$password"
          done
      # End encryption code.

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4